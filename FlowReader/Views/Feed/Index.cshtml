@using Microsoft.AspNetCore.Html
@using NonFactors.Mvc.Grid;

@model IEnumerable<FlowReader.Application.Models.FeedResponseModel>
@{
    ViewData["Title"] = "Feeds";
    Func<FlowReader.Application.Models.FeedResponseModel, string> GetButtonsString = (model) =>
    {
        var result = "";
        if (User.IsInRole("Admin"))
        {
            result += $"<a href=\"/Feed/Categories/{model.Id}\" class=\"btn btn-sm mr-2\" data-toggle=\"tooltip\" title=\"Categories\"><i class=\"bi bi-folder action-icon\"></i></a>";
        }
        result += $"<a href=\"/Feed/Edit/{model.Id}\" class=\"btn btn-sm mr-2\" data-toggle=\"tooltip\" title=\"Edit\"><i class=\"bi bi-pencil-square action-icon\"></i></a>";
        result += $"<a href=\"/Feed/Delete/{model.Id}\" class=\"btn btn-sm\" data-toggle=\"tooltip\" title=\"Delete\"><i class=\"bi bi-trash action-icon\"></i></a>";
        return result;
    };
}

<p>
    <a asp-action="Create">Add New</a>
</p>
@(
Html
    .Grid(Model)
    .Build(columns =>
    {
        columns.Add(model => model.UserTitle).Titled("Title");
        columns.Add(model => model.Description).Titled("Description");
        columns.Add(model => model.Link).Titled("Link");
        columns.Add(model => model.PublishingDate).Titled("PublishingDate").Formatted("{0:d}");        

        columns.Add(model => model.Id).Titled("").Encoded(false).RenderedAs(model =>
            new HtmlString(GetButtonsString(model))).Width(150);

    })
    .Empty("No data found")
    .Filterable()
    .Sortable()
    .Pageable()
)
